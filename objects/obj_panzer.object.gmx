<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_panzer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is tank. Use WASD for moving. Use QE for manage big gun. 
//Use mouse for manage small tower.

//tank parameters
max_speed = 7;
speed_accel = 0.5;
friction = 0.4;
speed_rot = 1; 
speed_size = 0.01;

//We are managing gun by d_angle. We can set it any.
//So if we need a frame, we have to set it in owner.
gun_rot = 1;            //Speed of gun rotation
gun_min_angle = -70;    //Min angle where can rotate gun
gun_max_angle = 70;     //Max angle where can rotate gun
gun = instance_create(x, y, obj_gun);
gun.owner = id;
gun.x_offset = -30;

//Tower has fixed d_angle. So we don't have to set special frame.
tower = instance_create(x, y, obj_tower);
tower.owner = id;
tower.d_angle = 90;
tower.x_offset = 52;
tower.y_offset = -30;
tower.scaled_by_owner = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;

//When we set goal_angle, turret will rotate thither.
tower.goal_angle = point_direction(tower.x, tower.y, mouse_x, mouse_y);
//We manage d_angle manually.
gun.d_angle += gun_rot * (keyboard_check(ord("Q")) - keyboard_check(ord("E")));
gun.d_angle = max(min(gun.d_angle, gun_max_angle), gun_min_angle);

direction += speed_rot * (keyboard_check(ord("A")) - keyboard_check(ord("D")));
speed += speed_accel * (keyboard_check(ord("W")) - keyboard_check(ord("S")));
speed = max(min(speed, max_speed), -max_speed);

image_xscale += speed_size * (keyboard_check(ord("Z")) - keyboard_check(ord("X")));
image_yscale += speed_size * (keyboard_check(ord("C")) - keyboard_check(ord("V")));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
